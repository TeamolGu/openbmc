From 416b351fcdfb2c844756ed51fb7a7e483cca9c8c Mon Sep 17 00:00:00 2001
From: JYH <yahan.jiang@luxshare-ict.com>
Date: Wed, 7 Sep 2022 20:47:12 +0800
Subject: [PATCH] modify PowerPulseMs time 200 to 1000

---
 src/power_control.cpp | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/src/power_control.cpp b/src/power_control.cpp
index 05aa45c..cc36f30 100644
--- a/src/power_control.cpp
+++ b/src/power_control.cpp
@@ -130,7 +130,7 @@ static bool nmiButtonMasked = false;
 
 // This map contains all timer values that are to be read from json config
 boost::container::flat_map<std::string, int> TimerMap = {
-    {"PowerPulseMs", 200},
+    {"PowerPulseMs", 1000},
     {"ForceOffPulseMs", 15000},
     {"ResetPulseMs", 500},
     {"PowerCycleMs", 5000},
@@ -584,6 +584,7 @@ static void savePowerState(const PowerState state)
 static void setPowerState(const PowerState state)
 {
     powerState = state;
+//lg2::info("JYH setPowerState:{POWER_STATES}","POWER_STATES",std::string(getHostState(powerState)));
     logStateTransition(state);
 
     hostIface->set_property("CurrentHostState",
@@ -591,6 +592,7 @@ static void setPowerState(const PowerState state)
 
     chassisIface->set_property("CurrentPowerState",
                                std::string(getChassisState(powerState)));
+
     chassisIface->set_property("LastStateChangeTime", getCurrentTimeMs());
 
     // Save the power state for the restore policy
@@ -1233,6 +1235,7 @@ static int setMaskedGPIOOutputForMs(gpiod::line& maskedGPIOLine,
 static int setGPIOOutputForMs(const ConfigData& config, const int value,
                               const int durationMs)
 {
+
     // If the requested GPIO is masked, use the mask line to set the output
     if (powerButtonMask && config.lineName == powerOutConfig.lineName)
     {
@@ -1662,6 +1665,7 @@ static void sioPowerGoodWatchdogTimerStart()
 static void powerStateOn(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateOn");
     switch (event)
     {
         case Event::psPowerOKDeAssert:
@@ -1716,6 +1720,7 @@ static void powerStateOn(const Event event)
 static void powerStateWaitForPSPowerOK(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateWaitForPSPowerOK");
     switch (event)
     {
         case Event::psPowerOKAssert:
@@ -1770,6 +1775,7 @@ static void powerStateWaitForSIOPowerGood(const Event event)
 static void powerStateOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+
     switch (event)
     {
         case Event::psPowerOKAssert:
@@ -1797,6 +1803,7 @@ static void powerStateOff(const Event event)
             break;
         case Event::powerOnRequest:
             psPowerOKWatchdogTimerStart();
+            lg2::info("Event::powerOnRequest");
             setPowerState(PowerState::waitForPSPowerOK);
             powerOn();
             break;
@@ -1809,6 +1816,7 @@ static void powerStateOff(const Event event)
 static void powerStateTransitionToOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateTransitionToOff");
     switch (event)
     {
         case Event::psPowerOKDeAssert:
@@ -1825,6 +1833,7 @@ static void powerStateTransitionToOff(const Event event)
 static void powerStateGracefulTransitionToOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateGracefulTransitionToOff");
     switch (event)
     {
         case Event::psPowerOKDeAssert:
@@ -1858,6 +1867,7 @@ static void powerStateGracefulTransitionToOff(const Event event)
 static void powerStateCycleOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateCycleOff");
     switch (event)
     {
         case Event::psPowerOKAssert:
@@ -1897,6 +1907,7 @@ static void powerStateCycleOff(const Event event)
 static void powerStateTransitionToCycleOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateTransitionToCycleOff");
     switch (event)
     {
         case Event::psPowerOKDeAssert:
@@ -1914,6 +1925,7 @@ static void powerStateTransitionToCycleOff(const Event event)
 static void powerStateGracefulTransitionToCycleOff(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateGracefulTransitionToCycleOff");
     switch (event)
     {
         case Event::psPowerOKDeAssert:
@@ -1948,6 +1960,7 @@ static void powerStateGracefulTransitionToCycleOff(const Event event)
 static void powerStateCheckForWarmReset(const Event event)
 {
     logEvent(__FUNCTION__, event);
+//lg2::info("JYH powerStateCheckForWarmReset");
     switch (event)
     {
         case Event::sioS5Assert:
-- 
2.17.1

