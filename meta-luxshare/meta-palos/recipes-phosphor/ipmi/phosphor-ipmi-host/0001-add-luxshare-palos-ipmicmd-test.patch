diff --git a/apphandler.cpp b/apphandler.cpp
index 0577c07..ce88ad4 100644
--- a/apphandler.cpp
+++ b/apphandler.cpp
@@ -9,6 +9,7 @@
 #include <sys/types.h>
 #include <systemd/sd-bus.h>
 #include <unistd.h>
+#include <stdlib.h>
 
 #include <algorithm>
 #include <app/channel.hpp>
@@ -1673,6 +1674,26 @@ ipmi::RspType<std::vector<uint8_t>>
     return ipmi::responseSuccess(readBuf);
 }
 
+ipmi::RspType<uint8_t,
+              uint8_t,
+              uint8_t,
+             uint8_t,
+              uint8_t
+              >ipmi_sensor_cmd_test()
+{
+    return ipmi::responseSuccess(0x1, 0x2, 0x3, 0x4, 0x5);
+}
+
+ipmi::RspType<uint8_t>ipmi_system_cmd_reboot()
+{
+    int res = system("echo 'You've send the reboot CMD by ipmi'");
+    res = system("reboot");
+    log<level::ERR>("reboot=",
+        entry("reboot-return=%d", res));
+
+    return ipmi::responseSuccess(0x0);
+}
+
 void register_netfn_app_functions()
 {
     // <Get Device ID>
@@ -1757,5 +1778,15 @@ void register_netfn_app_functions()
     ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnApp,
                           ipmi::app::cmdSetSystemInfoParameters,
                           ipmi::Privilege::Admin, ipmiAppSetSystemInfo);
+    // <OEM:App 03h Warm Reset>
+    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnApp,
+                          0x03,
+                          ipmi::Privilege::User, ipmi_system_cmd_reboot);
+
+    // <OEM:test>
+    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnApp,
+                          0xFF,
+                          ipmi::Privilege::User, ipmi_sensor_cmd_test);
+
     return;
 }
